#! /bin/sh -x

MULLE_CLANG_VERSION="${MULLE_CLANG_VERSION:-14.0.6.2}"

if [ ! -w /etc/apt/sources.list.d ]
then
   echo "Not enough permissions to write to /etc/apt/sources.list.d (run as sudo ?)" >&2
   exit 1
fi

#
# remove old files if there and possibly broken
#
rm /etc/apt/sources.list.d/mulle-kybernetik.com-main.list 2> /dev/null

#
# Figure out os-release name
#
if [ -z "${VERSION_CODENAME}" ]
then
   VERSION_CODENAME="`sed -n 's/^VERSION_CODENAME=//p' < /etc/os-release`"
   if [ -z "${VERSION_CODENAME}" ]
   then
      VERSION_CODENAME="`sed -n 's/^VERSION=".*(\(.*\))"/\1/p' < /etc/os-release`"
   fi

   if [ -z "${VERSION_CODENAME}" ]
   then
      echo "Could not figure out versioname from /etc/os-release" >&2
      exit 1
   fi
fi

#
# Figure out if curl or wget is installed, prefer curl if available but
# use wget as fallback and if nothing is installed because it's more
# lightweight.
#
echo "Checking if wget is needed..." >&2

CURLFLAGS="-fsSL" # taken from homebrew...
CURL="`command -v curl`"
if [ -z "${CURL}" ]
then
   CURLFLAGS="-q -O -"
   CURL="`command -v wget`"
   if [ -z "${CURL}" ]
   then
      echo "Installing wget..." >&2
      # need apt-get update if not run recently
      [ -z "$(find -H /var/lib/apt/lists -maxdepth 0 -mtime -7)" ] && apt-get update
      apt-get -q -y install wget || exit 1
   fi
   CURL="wget"
fi

echo "Checking if gnupg is needed..." >&2

GNUPG="`command -v gnupg`"
if [ -z "${GNUPG}" ]
then
   echo "Installing gnupg..." >&2
   # need apt-get update if not run recently
   [ -z "$(find -H /var/lib/apt/lists -maxdepth 0 -mtime -7)" ] && apt-get update
   apt-get -q -y install gnupg || exit 1
fi

#
# Get apt keys for mulle-kybernetik and Codeon and install
# Will overwrite existing previous keys, which is OK
#
echo "Installing apt keys..." >&2

"${CURL}" ${CURLFLAGS} "https://www.mulle-kybernetik.com/dists/debian-admin-pub.asc" | apt-key add - || exit 1
echo "deb [arch=all] http://www.mulle-kybernetik.com ${VERSION_CODENAME} main" > "/etc/apt/sources.list.d/mulle-kybernetik.com-main.list" || exit 1

#
# Now get the repository info and install or upgrade foundation-developer
#
echo "Installing foundation-developer packages ..." >&2

apt-get -q update &&
apt-get -y install foundation-developer || exit 1

case "${VERSION_CODENAME}" in
   focal|bullseye)
      codename="bullseye"
   ;;

   eoan|disco|cosmic|bionic|buster)
      codename="buster"
   ;;

   artful|zesty|yakkety|xenial|stretch)
      codename="stretch"
   ;;

   *)
      echo "Unsupported debian/ubuntu release  ${LSB_RELEASE}" >&2
      exit 1
   ;;
esac

# https://github.com/Codeon-GmbH/mulle-clang-project/releases/download/11.0.0.0-RC2/mulle-clang-11.0.0.0-buster-amd64.deb
filename="mulle-clang-${MULLE_CLANG_VERSION}-${codename}-amd64.deb"

url="https://github.com/mulle-cc/mulle-clang-project/releases/download/${MULLE_CLANG_VERSION}"
url="${url}/${filename}"

echo "Downloading ${url} ..." >&2

${CURL} ${CURLFLAGS} "${url}" > "${filename}" &&
echo "Installing mulle-clang ..." >&2 &&
dpkg --install "${filename}" || exit 1
